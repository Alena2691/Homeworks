import hashlib
import time


class User:
    def __init__(self, nickname: str, password: str, age: int):
        self.nickname = nickname
        self.password = User.hash_password(password)
        self.age = age

    def hash_password(password: str) -> str:
        """Хэширует пароль с использованием SHA-256."""
        return hashlib.sha256(password.encode()).hexdigest()


class Video:
    def __init__(self, title: str, duration: int, adult_mode: bool = False):
        self.title = title
        self.duration = duration
        self.time_now = 0
        self.adult_mode = adult_mode


class UrTube:
    def __init__(self):
        self.users = []  # Список пользователей
        self.videos = []  # Список видео
        self.current_user = None  # Текущий пользователь

    def log_in(self, nickname: str, password: str):
        """Вход пользователя в систему."""
        hashed_password = User.hash_password(password)
        for user in self.users:
            if user.nickname == nickname and user.password == hashed_password:
                self.current_user = user
                print(f'Пользователь {nickname} вошел в систему')
                return
        print('Неверный логин или пароль')

    def register(self, nickname: str, password: str, age: int):
        """Регистрация нового пользователя."""
        if any(user.nickname == nickname for user in self.users):
            print(f'Пользователь {nickname} уже существует')
            return
        new_user = User(nickname, password, age)
        self.users.append(new_user)
        self.current_user = new_user  # Автоматический вход после регистрации
        print(f'Пользователь {nickname} зарегистрирован и вошел в систему')

    def log_out(self):
        """Выход пользователя из системы."""
        self.current_user = None
        print('Вы вышли из системы')

    def add(self, *videos: Video):
        """Добавление видео в список."""
        for video in videos:
            if not any(v.title == video.title for v in self.videos):
                self.videos.append(video)
                print(f"Видео '{video.title}' добавлено")
            else:
                print(f"Видео '{video.title}' уже существует.")

    def get_videos(self, search_term: str):
        """Получение списка названий видео по поисковому слову."""
        return [video.title for video in self.videos if search_term.lower() in video.title.lower()]

    def watch_video(self, title: str):
        """Просмотр видео."""
        if not self.current_user:
            print('Войдите в аккаунт, чтобы смотреть видео')
            return

        video = next((v for v in self.videos if v.title == title), None)

        if not video:
            print('Видео не найдено')
            return

        if video.adult_mode and self.current_user.age < 18:
            print('Вам нет 18 лет, пожалуйста, покиньте страницу')
            return

        print(f"Воспроизведение видео '{video.title}'...")

        for second in range(video.duration):
            time.sleep(1)  # Пауза на 1 секунду
            print(f"Секунда {second + 1}")

        print('Конец видео')

ur = UrTube()
v1 = Video('Лучший язык программирования 2024 года', 200)
v2 = Video('Для чего девушкам парень программист?', 10, adult_mode = True)

# Добавление видео
ur.add(v1, v2)

# Проверка поиска
print(ur.get_videos('лучший'))
print(ur.get_videos('ПРОГ'))

# Проверка на вход пользователя и возрастное ограничение
ur.watch_video('Для чего девушкам парень программист?')
ur.register('vasya_pupkin', 'lolkekcheburek', 13)
ur.watch_video('Для чего девушкам парень программист?')
ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
ur.watch_video('Для чего девушкам парень программист?')

# Проверка входа в другой аккаунт
ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)
print(ur.current_user)

# Попытка воспроизведения несуществующего видео
ur.watch_video('Лучший язык программирования 2024 года!')
